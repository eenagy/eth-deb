--- a/packages/cli/src/cli.ts
+++ b/packages/cli/src/cli.ts
@@ -9,7 +9,7 @@
 const {version} = getVersionData();
 const topBanner = `üåü Lodestar: TypeScript Implementation of the Ethereum Consensus Beacon Chain.
   * Version: ${version}
-  * by ChainSafe Systems, 2018-${new Date().getFullYear()}`;
+  * by ChainSafe Systems, 2018-2024`;
 const bottomBanner = `üìñ For more information, check the CLI reference:
   * https://chainsafe.github.io/lodestar/reference/cli
 
--- a/packages/cli/src/util/version.ts
+++ b/packages/cli/src/util/version.ts
@@ -47,6 +47,9 @@
     if (!localVersion || !localVersion.includes(commitShort)) {
       parts.push(commitShort);
     }
+  }else {
+    // for reproducible builds
+    parts.push("9ade975")
   }
 
   return {
--- a/packages/flare/src/cli.ts
+++ b/packages/flare/src/cli.ts
@@ -10,7 +10,7 @@
 In the wrong hands, can lead people astray.
 Use with care.
 
-  * by ChainSafe Systems, 2018-${new Date().getFullYear()}`;
+  * by ChainSafe Systems, 2018-2024`;
 const bottomBanner = `
 ‚úçÔ∏è Give feedback and report issues on GitHub:
   * https://github.com/ChainSafe/lodestar`;
--- a/packages/prover/src/cli/cli.ts
+++ b/packages/prover/src/cli/cli.ts
@@ -9,7 +9,7 @@
 const {version} = getVersionData();
 const topBanner = `üåü Lodestar Prover Proxy: Ethereum RPC proxy for RPC responses, verified against the trusted block hashes.
   * Version: ${version}
-  * by ChainSafe Systems, 2018-${new Date().getFullYear()}`;
+  * by ChainSafe Systems, 2018-2024`;
 const bottomBanner = `üìñ For more information, check the CLI reference:
   * https://chainsafe.github.io/lodestar/reference/cli
 
--- a/packages/prover/src/utils/version.ts
+++ b/packages/prover/src/utils/version.ts
@@ -37,6 +37,7 @@
 
   const {branch, commit} = readAndGetGitData();
 
+
   // Add branch only if not present and not an ignore value
   if (branch && !BRANCH_IGNORE.test(branch)) parts.push(branch);
 
@@ -47,6 +48,9 @@
     if (!localVersion || !localVersion.includes(commitShort)) {
       parts.push(commitShort);
     }
+  } else {
+    // patch override to bake in version number for reproducible build
+    parts.push("9ade975")
   }
 
   return {
