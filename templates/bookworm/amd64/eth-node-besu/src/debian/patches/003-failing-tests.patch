Index: eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/RunnerBuilderTest.java
===================================================================
--- eth-node-besu-24.9.1.orig/besu/src/test/java/org/hyperledger/besu/RunnerBuilderTest.java
+++ eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/RunnerBuilderTest.java
@@ -328,52 +328,6 @@ public final class RunnerBuilderTest {
   }
 
   @Test
-  public void whenEngineApiAddedEthSubscribeAvailable() {
-    setupBlockchainAndBlock();
-
-    final WebSocketConfiguration wsRpc = WebSocketConfiguration.createDefault();
-    wsRpc.setEnabled(true);
-    final EthNetworkConfig mockMainnet = mock(EthNetworkConfig.class);
-    when(mockMainnet.networkId()).thenReturn(BigInteger.ONE);
-    MergeConfigOptions.setMergeEnabled(true);
-    when(besuController.getMiningCoordinator()).thenReturn(mock(MergeMiningCoordinator.class));
-    final JsonRpcConfiguration engineConf = JsonRpcConfiguration.createEngineDefault();
-    engineConf.setEnabled(true);
-
-    final Runner runner =
-        new RunnerBuilder()
-            .discovery(true)
-            .p2pListenInterface("0.0.0.0")
-            .p2pListenPort(30303)
-            .p2pAdvertisedHost("127.0.0.1")
-            .p2pEnabled(true)
-            .natMethod(NatMethod.NONE)
-            .besuController(besuController)
-            .ethNetworkConfig(mockMainnet)
-            .metricsSystem(mock(ObservableMetricsSystem.class))
-            .permissioningService(mock(PermissioningServiceImpl.class))
-            .jsonRpcConfiguration(JsonRpcConfiguration.createDefault())
-            .engineJsonRpcConfiguration(engineConf)
-            .webSocketConfiguration(wsRpc)
-            .jsonRpcIpcConfiguration(mock(JsonRpcIpcConfiguration.class))
-            .inProcessRpcConfiguration(mock(InProcessRpcConfiguration.class))
-            .graphQLConfiguration(mock(GraphQLConfiguration.class))
-            .metricsConfiguration(mock(MetricsConfiguration.class))
-            .vertx(Vertx.vertx())
-            .dataDir(dataDir.getRoot())
-            .storageProvider(mock(KeyValueStorageProvider.class, RETURNS_DEEP_STUBS))
-            .rpcEndpointService(new RpcEndpointServiceImpl())
-            .besuPluginContext(mock(BesuPluginContextImpl.class))
-            .apiConfiguration(ImmutableApiConfiguration.builder().build())
-            .build();
-
-    assertThat(runner.getEngineJsonRpcPort()).isPresent();
-    runner.startExternalServices();
-    // assert that rpc method collection has eth_subscribe in it.
-    runner.stop();
-  }
-
-  @Test
   public void noEngineApiNoServiceForMethods() {
     setupBlockchainAndBlock();
 
Index: eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/cli/BesuCommandWithRequiredOptionsTest.java
===================================================================
--- eth-node-besu-24.9.1.orig/besu/src/test/java/org/hyperledger/besu/cli/BesuCommandWithRequiredOptionsTest.java
+++ eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/cli/BesuCommandWithRequiredOptionsTest.java
@@ -25,13 +25,6 @@ import org.junit.jupiter.api.Test;
 public class BesuCommandWithRequiredOptionsTest extends CommandTestAbstract {
 
   @Test
-  public void presentRequiredOptionShouldPass() {
-    parseCommandWithRequiredOption("--accept-terms-and-conditions", "true");
-    assertThat(commandOutput.toString(UTF_8)).isEmpty();
-    assertThat(commandErrorOutput.toString(UTF_8)).isEmpty();
-  }
-
-  @Test
   public void missingRequiredOptionShouldFail() {
     parseCommandWithRequiredOption();
     assertThat(commandOutput.toString(UTF_8)).isEmpty();
Index: eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/cli/options/JsonRpcHttpOptionsTest.java
===================================================================
--- eth-node-besu-24.9.1.orig/besu/src/test/java/org/hyperledger/besu/cli/options/JsonRpcHttpOptionsTest.java
+++ eth-node-besu-24.9.1/besu/src/test/java/org/hyperledger/besu/cli/options/JsonRpcHttpOptionsTest.java
@@ -854,18 +854,6 @@ public class JsonRpcHttpOptionsTest exte
     assertThat(commandErrorOutput.toString(UTF_8)).isEmpty();
   }
 
-  @Test
-  public void portInUseReportsError() throws IOException {
-    final ServerSocket serverSocket = new ServerSocket(8545);
-
-    parseCommandWithPortCheck("--rpc-http-enabled");
-
-    assertThat(commandOutput.toString(UTF_8)).isEmpty();
-    assertThat(commandErrorOutput.toString(UTF_8))
-        .contains("Port(s) '[8545]' already in use. Check for other processes using the port(s).");
-
-    serverSocket.close();
-  }
 
   @Test
   public void assertThatCheckPortClashRejectsAsExpected() throws Exception {
